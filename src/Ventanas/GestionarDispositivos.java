/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author oscar
 */
public class GestionarDispositivos extends javax.swing.JDialog {

   

    /**
     * Creates new form GestionarDispositivos
     */
    public GestionarDispositivos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        ActualizarTabla();
    }

    public GestionarDispositivos() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Crear = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        cargaMasiva = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        Dispositivos = new javax.swing.JMenu();
        GestionarDispositivos = new javax.swing.JMenuItem();
        Acciones = new javax.swing.JMenu();
        AccionesDispositivos = new javax.swing.JMenuItem();
        AccionesExternas = new javax.swing.JMenuItem();
        Reportes = new javax.swing.JMenu();
        Bitácora = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel1.setText("Gestionar Dispositivos");

        Crear.setText("Crear dispositivo");
        Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearActionPerformed(evt);
            }
        });

        Eliminar.setText("Eliminar dispositivo");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        cargaMasiva.setText("Carga masiva dispositivos");

        jButton4.setText("Carga masiva administracion ");

        tblDatos = new JTable(){
            public boolean isCellEditable(int row, int column){
                for(int i = 0; i < tblDatos.getRowCount(); i++){
                    if(row == i){
                        return false;
                    }
                }
                return true;
            }
        };
        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDatosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDatos);

        Dispositivos.setText("Dispositivos");

        GestionarDispositivos.setText("Gestionar Dispositivos");
        GestionarDispositivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionarDispositivosActionPerformed(evt);
            }
        });
        Dispositivos.add(GestionarDispositivos);

        jMenuBar1.add(Dispositivos);

        Acciones.setText("Acciones");

        AccionesDispositivos.setText("Acciones con Dispositivos");
        AccionesDispositivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccionesDispositivosActionPerformed(evt);
            }
        });
        Acciones.add(AccionesDispositivos);

        AccionesExternas.setText("Acciones Externas al Dispositivo");
        AccionesExternas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccionesExternasActionPerformed(evt);
            }
        });
        Acciones.add(AccionesExternas);

        jMenuBar1.add(Acciones);

        Reportes.setText("Reportes");

        Bitácora.setText("Bitácora");
        Bitácora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BitácoraActionPerformed(evt);
            }
        });
        Reportes.add(Bitácora);

        jMenuBar1.add(Reportes);

        jMenu1.setText("Usuarios");

        jMenuItem1.setText("Gestionar Usuarios");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(Crear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Eliminar)
                        .addGap(70, 70, 70)
                        .addComponent(cargaMasiva)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Crear)
                    .addComponent(Eliminar)
                    .addComponent(cargaMasiva)
                    .addComponent(jButton4))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void GestionarDispositivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionarDispositivosActionPerformed

    }//GEN-LAST:event_GestionarDispositivosActionPerformed
    
    static String dato;
     public ListaEnlazada lista = new ListaEnlazada();

    public void setLista(ListaEnlazada lista) {
        this.lista = lista;
    }

    DefaultTableModel modelo = new DefaultTableModel();
    
    public void ActualizarTabla() {
        Nodo temporal;
        temporal = lista.head;
        String sql = "SELECT * FROM admin.DISPOSITIVO";

        modelo.addColumn("identificador");
        modelo.addColumn("Tipo");
        modelo.addColumn("Correo Electronico");
        modelo.addColumn("Nombre");
        modelo.addColumn("Estado");

        Dispositivos dispositivo = new Dispositivos();
        //if (temporal != (null)) {
        Interfaz acceso = new Interfaz();
        String[] arreglo = new String[5];
        try {
            Connection conn = ConexionDB.getConexionDB(acceso.usuario1, acceso.contraseña1).getConn();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                //CORREO, NOMBRE, TIPO, CONEXION, VISIBLE,ENCENDIDO, NUMERO
                dispositivo.setCorreoElectronico(rs.getString(2));
                dispositivo.setNumero(rs.getString(3));
                dispositivo.setConexion(rs.getString(4));
                dispositivo.setVisible(rs.getString(5));
                dispositivo.setEncendido(rs.getString(6));
                dispositivo.setNumero(rs.getString(7));

                this.lista.insertarFinal(dispositivo);

                arreglo[0] = rs.getString(1);
                arreglo[1] = rs.getString(4);
                arreglo[2] = rs.getString(3);
                arreglo[3] = rs.getString(2);
                arreglo[4] = rs.getString(7);

                modelo.addRow(arreglo);
                // lista.tail.setSiguiente();arreglo[0]      agregar a la lista enlazada los nuevos

                if (tblDatos.getModel().getRowCount() == 0) {
                    System.out.println("no se encontro ninguna concidencia");

                }
                tblDatos.setModel(modelo);
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void AccionesExternasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccionesExternasActionPerformed
        this.setVisible(false);
        Interfaz interfaz = new Interfaz();
        new AccionesExternas(interfaz, true).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_AccionesExternasActionPerformed

    private void BitácoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BitácoraActionPerformed
        this.setVisible(false);
        Interfaz interfaz = new Interfaz();
        new Bitácora(interfaz, true).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BitácoraActionPerformed

    private void CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearActionPerformed
        this.setVisible(false);
        Interfaz interfaz = new Interfaz();
        new Crear(interfaz, true).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_CrearActionPerformed

    private void AccionesDispositivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccionesDispositivosActionPerformed
        this.setVisible(false);
        Interfaz interfaz = new Interfaz();
        new MenuAccionesDispositivos(interfaz, true).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_AccionesDispositivosActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tblDatos.getModel();
        int fila = tblDatos.getSelectedRow();

        if (fila >= 0) {
            dato = String.valueOf(modelo.getValueAt(tblDatos.getSelectedRow(), 0));
            modelo.removeRow(fila);
            try {
                System.out.println(dato);
                DispositivosDB.eliminar(dato);
            } catch (SQLException ex) {
                Logger.getLogger(GestionarDispositivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un Dispositivo");
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void tblDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatosMouseClicked
        if (evt.getClickCount() == 2) {
            DefaultTableModel modelo = (DefaultTableModel) tblDatos.getModel();
            int fila = tblDatos.getSelectedRow();

            if (fila >= 0) {
                this.dato = String.valueOf(modelo.getValueAt(tblDatos.getSelectedRow(), 0));
                

                this.setVisible(false);
                Interfaz interfaz = new Interfaz();
                new Modificar(interfaz, true).setVisible(true);
                this.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un Dispositivo");
            }
        }
    }//GEN-LAST:event_tblDatosMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
         this.setVisible(false);
        Interfaz interfaz = new Interfaz();
        new Usuarios(interfaz, true).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        GestionarDispositivos ver = new GestionarDispositivos();
        ver.ActualizarTabla();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarDispositivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarDispositivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarDispositivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarDispositivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionarDispositivos dialog = new GestionarDispositivos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Acciones;
    private javax.swing.JMenuItem AccionesDispositivos;
    private javax.swing.JMenuItem AccionesExternas;
    private javax.swing.JMenuItem Bitácora;
    private javax.swing.JButton Crear;
    private javax.swing.JMenu Dispositivos;
    private javax.swing.JButton Eliminar;
    private javax.swing.JMenuItem GestionarDispositivos;
    private javax.swing.JMenu Reportes;
    private javax.swing.JButton cargaMasiva;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables
}
